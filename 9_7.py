# Импортируем модуль math для проверки простого числа
import math

# Декоратор is_prime
# Проверяет, является ли результат декорируемой функции простым числом
# и выводит соответствующее сообщение

def is_prime(func):
    """
    Декоратор для проверки, является ли результат декорируемой функции простым числом.

    :param func: Декорируемая функция.
    :return: Обертка wrapper, добавляющая функциональность проверки числа.
    """
    def wrapper(*args, **kwargs):
        # Вызываем декорируемую функцию и сохраняем её результат
        result = func(*args, **kwargs)

        # Проверяем, является ли результат простым числом
        if result > 1:  # Простые числа начинаются с 2
            is_prime = True
            for i in range(2, int(math.sqrt(result)) + 1):
                if result % i == 0:
                    is_prime = False
                    break
            if is_prime:
                print("Простое")
            else:
                print("Составное")
        else:
            print("Составное")

        # Возвращаем результат декорируемой функции
        return result

    return wrapper

# Функция sum_three складывает три числа
@is_prime  # Применяем декоратор is_prime к функции sum_three
def sum_three(a, b, c):
    """
    Складывает три числа и возвращает их сумму.

    :param a: Первое число.
    :param b: Второе число.
    :param c: Третье число.
    :return: Сумма трех чисел.
    """
    return a + b + c

# Пример использования
result = sum_three(2, 3, 6)  # Результат 11
print(result)  # Печать результата
