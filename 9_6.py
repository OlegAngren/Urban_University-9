def all_variants(text):
    """
    Функция-генератор для генерации всех подпоследовательностей строки.

    :param text: Исходная строка.
    :yield: Подпоследовательности строки (отдельные символы, пары символов, и т.д.).
    """
    # Внешний цикл проходит по всем возможным длинам подпоследовательностей
    for length in range(1, len(text) + 1):
        # Внутренний цикл проходит по всем возможным начальным индексам для текущей длины
        for start in range(len(text) - length + 1):
            # Возвращаем текущую подпоследовательность с помощью yield
            yield text[start:start + length]

# Пример использования функции-генератора
# Создаем объект-генератор для строки "abc"
a = all_variants("abc")

# Итерируемся по генератору и выводим результат
for i in a:
    print(i)

    """ Внешний цикл теперь проходит по длинам подстрок (length), начиная с 1 и заканчивая длиной строки len(text).

        Внутренний цикл проходит по всем возможным начальным индексам (start) для текущей длины подстроки. Количество итераций внутреннего цикла зависит от текущей длины подстроки: 
        len(text) - length + 1.

        yield возвращает подстроку, начиная с индекса start и длиной length."""
